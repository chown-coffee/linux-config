###
### backend settings
###

backend = "glx";

glx-no-stencil = true;
glx-copy-from-front = false;

###
### general settings
###

shadow = false;
shadow-radius = 5;
shadow-offset-x = -5;
shadow-offset-y = -5;
shadow-opacity = 0.5;

# avoid glitches in case shadows are enabled
shadow-exclude = [
    "! name~=''",
    "name = 'Notification'",
    "name = 'Plank'",
    "name = 'Docky'",
    "name = 'Kupfer'",
    "name = 'xfce4-notifyd'",
    "name *= 'VLC'",
    "name *= 'compton'",
    "name *= 'picom'",
    "name *= 'Chromium'",
    "name *= 'Chrome'",
    "class_g = 'Firefox' && argb",
    "class_g = 'Conky'",
    "class_g = 'Kupfer'",
    "class_g = 'Synapse'",
    "class_g ?= 'Notify-osd'",
    "class_g ?= 'Cairo-dock'",
    "class_g ?= 'Xfce4-notifyd'",
    "class_g ?= 'Xfce4-power-manager'",
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];
# avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
shadow-ignore-shaped = false;

###
### opacity
###

inactive-opacity = 1;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;
opacity-rule = [ ];

inactive-dim = 0.4
blur-background = true; # blur background of transparent windows
blur-background-fixed = false; # do not let blur radius adjust based on window opacity
blur-background-exclude = [
    "window_type = 'dock'",
    "window_type = 'desktop'"
];

###
### fade windows during opacity changes
###

fading = true;
fade-delta = 9;
fade-in-step = 0.03;
fade-out-step = 0.03;
# specify a list of conditions of windows that should not be faded
fade-exclude = [ ];

###
### other
###

# try to detect WM windows and mark them as active
mark-wmwin-focused = true;

# mark all non-WM but override-redirect windows active (e.g. menus)
mark-ovredir-focused = true;

# use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events
# usually more reliable but depends on a EWMH-compliant WM
use-ewmh-active-win = true;

# detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on
detect-rounded-corners = true;

# detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows
# This prevents opacity being ignored for some apps
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what
detect-client-opacity = true;

refresh-rate = 0;
vsync = true;
dbe = false;
unredir-if-possible = false;
focus-exclude = [ ];

# use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time
detect-transient = true;

# use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too
detect-client-leader = true;

wintypes:
{
    tooltip =
    {
        # fade: Fade the particular type of windows.
        fade = true;
        # shadow: Give those windows shadow
        shadow = false;
        # opacity: Default opacity for the type of windows.
        opacity = 0.85;
        # focus: Whether to always consider windows of this type focused.
        focus = true;
    };
};

# Use X Sync fence to sync clients' draw calls. Needed on nvidia-drivers with GLX backend for some users
xrender-sync-fence = true;
